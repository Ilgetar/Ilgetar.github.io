{
    "version": "https://jsonfeed.org/version/1",
    "title": "十三零",
    "description": "一切问题都一定有答案",
    "home_page_url": "https://ilgetar.github.io",
    "items": [
        {
            "id": "https://ilgetar.github.io/2025/08/28/JAVA/",
            "url": "https://ilgetar.github.io/2025/08/28/JAVA/",
            "title": "JAVA",
            "date_published": "2025-08-27T17:25:10.000Z",
            "content_html": "<h1 id=\"java语言\"><a class=\"anchor\" href=\"#java语言\">#</a> JAVA 语言</h1>\n<h1 id=\"第一章-java入门\"><a class=\"anchor\" href=\"#第一章-java入门\">#</a> 第一章 Java 入门</h1>\n<h3 id=\"1java的地位\"><a class=\"anchor\" href=\"#1java的地位\">#</a> 1.JAVA 的地位</h3>\n<p>历史上施乐公司给出了第一代图形化界面。相比较控制台，图形化界面的缺点：速度慢，消耗内存</p>\n<p>完全面向对象，与平台无关，安全稳定，解释的，多线程，跨平台，动态的语言</p>\n<blockquote>\n<p>最大的优点：平台无关性。通过 JAVA 虚拟机（Java virtual machine）实现跨平台和安全性。所以在解释的时候，只看.class 文件。存在不同的虚拟机，可以开发自己的虚拟机。目前主要为 Hotspot VM。不同语言都可以通过各自对应的编译器生成结构相同的字节码文件，JVM 只认识字节码。JVM 加载字节码文件，通过不同操作系统转换为对应的机器码。</p>\n</blockquote>\n<p>在 web 开发和 Android 开发都占主体地位，严格类型检查，提供了垃圾回收机制</p>\n<p>常用于大数据和人工智能开发</p>\n<h3 id=\"2语言层级\"><a class=\"anchor\" href=\"#2语言层级\">#</a> 2. 语言层级</h3>\n<p><img data-src=\"Screenshot_2023-09-04-10-11-46-431_cn.wps.moffice_.png\" alt=\"Screenshot_2023-09-04-10-11-46-431_cn.wps.moffice_.png\" /></p>\n<h3 id=\"3推荐资料\"><a class=\"anchor\" href=\"#3推荐资料\">#</a> 3. 推荐资料</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVJ4NDExODc2Zj9mcm9tPXNlYXJjaCZhbXA7c2VpZD0yNDYxNjYzNjk4NjUwNTM5MzYx\">https://www.bilibili.com/video/BV1Rx411876f?from=search&amp;seid=2461663698650539361</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzU3NDg3OTAxL2FydGljbGUvZGV0YWlscy8xMjM5NjU2NDY=\">https://blog.csdn.net/m0_57487901/article/details/123965646</span></p>\n<h3 id=\"4jrejdk与jvm\"><a class=\"anchor\" href=\"#4jrejdk与jvm\">#</a> 4.JRE，JDK，与 JVM</h3>\n<p>JRE：JAVA 运行环境</p>\n<p>JDK：JAVA 开发工具包</p>\n<p>JVM：JAVA 虚拟机</p>\n<p><img data-src=\"Screenshot_2023-09-04-11-18-12-674_cn.wps.moffice_.png\" alt=\"Screenshot_2023-09-04-11-18-12-674_cn.wps.moffice_.png\" /></p>\n<h3 id=\"5安装\"><a class=\"anchor\" href=\"#5安装\">#</a> 5. 安装</h3>\n<p>下载 JDK20 存档即可</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamF2YS5jb20vemgtQ04v\">https://www.java.com/zh-CN/</span></p>\n<h3 id=\"6jvm整体结构难点\"><a class=\"anchor\" href=\"#6jvm整体结构难点\">#</a> 6.JVM 整体结构（难点）</h3>\n<p><img data-src=\"Screenshot_2023-09-04-11-39-44-541_cn.wps.moffice_.png\" alt=\"Screenshot_2023-09-04-11-39-44-541_cn.wps.moffice_.png\" /></p>\n<h3 id=\"7集成环境\"><a class=\"anchor\" href=\"#7集成环境\">#</a> 7. 集成环境</h3>\n<p>开发 JAVA 程序：JVM，核心类库（已经写好的代码），开发工具（javac 等），合称 JDK。运行 JAVA 程序不需要开发工具。</p>\n<p>JRE: 运行环境，需要下载才能运行 Java，包含 JVM, 核心类库，运行工具。</p>\n<p>intelliJIDEA,VS,Textpad 等</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhL2Rvd25sb2FkLz9zZWN0aW9uPXdpbmRvd3M=\">https://www.jetbrains.com/idea/download/?section=windows</span></p>\n<h4 id=\"71-jdk目录释义\"><a class=\"anchor\" href=\"#71-jdk目录释义\">#</a> 7.1 JDK 目录释义</h4>\n<p>bin：可执行文件目录， 主要是使 Java 编程语言编程过程中帮助开发、执行、调试并且可以生成文档所需要的可执行程序。<br />\nconf：根据名字可知， 这个是用户可配置的配置项文件， 可以根据配置调整 JDK 的访问权限， 配置安全算法， 还有 JDK 加密扩展策略配置等。<br />\ninclude：C 语言头文件， 主要是用来 Java 本地虚拟机（JVM）调试本地的代码<br />\n jmods：使用 jlink 去自定义的编译模块化运行环境。<br />\nlegal：每个模块的许可证和版权文件， 还包含第三方的通知文件。 使用 md 文件描述。<br />\nlib：JDK 要求的其他类库和支持文件。这些文件不能使用外部调用。</p>\n<h4 id=\"72-bin工具包释义\"><a class=\"anchor\" href=\"#72-bin工具包释义\">#</a> 7.2 bin 工具包释义</h4>\n<p>Javac：Java 编译器，用来将 java 程序编译成 Bytecode。<br />\nJava：Java 解释器，执行已经转换成 Bytecode 的 java 应用程序。<br />\nJavap：反编译，将类文件还原回方法和变量。<br />\nJar：打包工具。</p>\n<h3 id=\"8第一个java程序\"><a class=\"anchor\" href=\"#8第一个java程序\">#</a> 8. 第一个 JAVA 程序</h3>\n<ol>\n<li>\n<p>建立源代码文件目录，新建 TXT 文本，修改后缀名为 Java。</p>\n</li>\n<li>\n<p>编写相关代码。</p>\n</li>\n<li>\n<p>打开控制台，使用 “javac 你的代码” 编译 JAVA 类文件，注意当前目录和 javac 的目录路径。</p>\n</li>\n<li>\n<p>使用 “Java 你的代码” 执行 JAVA 程序</p>\n</li>\n</ol>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span><span class=\"comment\">//注意：公共类必须文件名与类名相同，私有类反之</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span><span class=\"comment\">//固定格式</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;hello world ！&quot;</span>);<span class=\"comment\">//面向对象格式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>例如：（控制台使用 jar 打包 class 文件，指定路径为 C:\\User\\java, 命名为 hello1.jar）</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jar -cvf C:\\User\\java\\hello1.jar *.class</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><strong>环境变量</strong>：cmd 操作命令查询位置，如果想要在任意目录下都可以打开指定的软件，可以考虑把目标路径配置到环境变量里。注意新建编辑环境变量之后，必须要重新启动 cmd 控制台</p>\n</blockquote>\n<p>注意：如果在 Java 源代码中要输出中文字符，可以使用默认的 utf-8 的编码来保存源文件，但在编译时，需要加上 - encoding utf8 这个选项。例如：<br />\njavac HelloWorld.java -encoding utf8</p>\n<h3 id=\"9常用的cmd操作\"><a class=\"anchor\" href=\"#9常用的cmd操作\">#</a> 9. 常用的 Cmd 操作</h3>\n<blockquote>\n<p>📌cd 切换控制台目录；“\\” 返回根目录；“..” 返回上级目录；cls 清屏；<br />\ndir 查看当前目录信息；set path 设置或查看环境变量（path 后不加空格，path 仅为当前窗口有效，可以在设置 - 系统 - 系统信息中修改）；<br />\n“.” 表示当前目录；set classpath 设置类路径变量；jar 用于打包类文件，运行时注意 classpath；</p>\n</blockquote>\n<ul>\n<li>\n<p>控制台打开：可以在目录栏里面输入 cmd 打开 cmd，好处是路径直接为当前目录。</p>\n</li>\n<li>\n<p>C: 切换盘</p>\n</li>\n<li>\n<p>Cd\\ 回退到盘目录</p>\n</li>\n<li>\n<p>Exit 退出 cmd</p>\n</li>\n<li>\n<p>Win+R 快捷打开 cmd</p>\n</li>\n<li>\n<p>cmd 启动应用：找到文件位置，输入文件名启动</p>\n</li>\n</ul>\n<hr />\n<h1 id=\"第二章-java基本语法与概念\"><a class=\"anchor\" href=\"#第二章-java基本语法与概念\">#</a> 第二章 Java 基本语法与概念</h1>\n<h2 id=\"1类与对象\"><a class=\"anchor\" href=\"#1类与对象\">#</a> 1. 类与对象</h2>\n<h3 id=\"11课堂示例程序\"><a class=\"anchor\" href=\"#11课堂示例程序\">#</a> 1.1 课堂示例程序</h3>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span>  <span class=\"type\">int</span> x; <span class=\"comment\">//属性默认为私有，方法默认为公共</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span>  <span class=\"type\">int</span> y;</span><br><span class=\"line\">   <span class=\"keyword\">void</span> <span class=\"title function_\">output</span><span class=\"params\">()</span> <span class=\"comment\">//定义一个为output的方法</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;x:&quot;</span>+x);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;y:&quot;</span>+y);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Test</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[]args)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">      Point p1;</span><br><span class=\"line\">      p1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>();<span class=\"comment\">//实例化对象</span></span><br><span class=\"line\">      p1.output();<span class=\"comment\">//调用output方法</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"type\">Point</span> <span class=\"variable\">p2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>(<span class=\"number\">3</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">      p2.output();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>📌关于类：只能也只需要定义属性和行为。<br />\n类的使用：定义完后，先实例化，再调用行为和方法。可以在类的定义里面定义一个公共的方法用来赋初值。</p>\n</blockquote>\n<h3 id=\"12-变量\"><a class=\"anchor\" href=\"#12-变量\">#</a> 1.2 变量</h3>\n<p>变量的定义格式：数据类型 变量名 = 数据值；</p>\n<h4 id=\"121-数据类型\"><a class=\"anchor\" href=\"#121-数据类型\">#</a> 1.2.1 数据类型</h4>\n<p>数据类型分为基础数据类型和引用数据类型。</p>\n<blockquote>\n<p>📌long 类型需要加 L 后缀，定义 float 类型时加 f 后缀</p>\n</blockquote>\n<p><img data-src=\"Screenshot_2023-09-22-08-44-25-512_com.wolai.flutt.png\" alt=\"Screenshot_2023-09-22-08-44-25-512_com.wolai.flutt.png\" /></p>\n<p><strong>图片的三种存储</strong>：黑白图，灰度图，彩色图</p>\n<p><strong>汉字的存储</strong>：</p>\n<blockquote>\n<p>GBK 字符编码：2000.3.17 收录 21003 个中日韩文字，包括台湾繁体字。</p>\n</blockquote>\n<blockquote>\n<p>Unicode 编码：国际标准字符集，将世界各语言每个字符都唯一编码。</p>\n</blockquote>\n<blockquote>\n<p>进制的处理：二进制由 0b 开头，十进制默认，八进制以 0 开头，十六进制用 0x 开头。该特性仅由 JDK7 以后才存在</p>\n</blockquote>\n<h4 id=\"122-数据类型的转型\"><a class=\"anchor\" href=\"#122-数据类型的转型\">#</a> 1.2.2 数据类型的转型</h4>\n<p><img data-src=\"Screenshot_2023-09-17-21-31-01-898_tv.danmaku.bili.png\" alt=\"Screenshot_2023-09-17-21-31-01-898_tv.danmaku.bili.png\" /></p>\n<p><img data-src=\"Screenshot_2023-09-17-21-39-18-497_tv.danmaku.bili.png\" alt=\"Screenshot_2023-09-17-21-39-18-497_tv.danmaku.bili.png\" /></p>\n<p><img data-src=\"Screenshot_2023-09-17-21-35-04-136_tv.danmaku.bili.png\" alt=\"Screenshot_2023-09-17-21-35-04-136_tv.danmaku.bili.png\" /></p>\n<h4 id=\"123标识符\"><a class=\"anchor\" href=\"#123标识符\">#</a> 1.2.3 标识符</h4>\n<p>即给类、变量，方法的取名。一般依照阿里巴巴命名规范。</p>\n<p>硬性要求</p>\n<p>不允许数字开头，不允许使用关键字（关键字是小写），区分大小写，由数字，字母，_和 $ 组成。</p>\n<p>软性要求</p>\n<p>小驼峰命名法：一个单词时候全部小写，多个单词时候。第一个单词首字母小写，其它单词首字母保持大写。方法与变量使用较多。例如：name，firstName</p>\n<p>大驼峰命名法：一个单词时候首字母大写，多个单词时候首字母全部大写。类使用较多。</p>\n<h4 id=\"124键盘录入\"><a class=\"anchor\" href=\"#124键盘录入\">#</a> 1.2.4 键盘录入</h4>\n<p>Scanner 类</p>\n<p>1. 导包：必须写在类定义的上面。</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br></pre></td></tr></table></figure></p>\n<p>2. 创建对象，使用</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> sc.nextInt();</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"125局部变量和成员变量\"><a class=\"anchor\" href=\"#125局部变量和成员变量\">#</a> 1.2.5 局部变量和成员变量</h4>\n<ul>\n<li>\n<p><strong>局部变量的特点</strong></p>\n<ol>\n<li>\n<p>局部变量声明在方法、构造方法或代码块中，只在其声明的范围内有效。</p>\n</li>\n<li>\n<p>局部变量在声明时不会被自动初始化，需要在使用之前手动赋值。</p>\n</li>\n<li>\n<p>局部变量存储在栈内存中，当其声明的范围结束时，会被自动销毁。</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>成员变量的特点</strong></p>\n<ol>\n<li>\n<p>成员变量声明在类中，在整个类内部都可见和访问。</p>\n</li>\n<li>\n<p>成员变量在声明时会被自动初始化，数值类型为 0，布尔类型为 false，引用类型为 null。</p>\n</li>\n<li>\n<p>成员变量存储在堆内存中，和对象的生命周期保持一致，只有该对象被销毁才会被释放。</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>区分使用的几个关键点</strong></p>\n<ol>\n<li>\n<p>作用范围：局部变量只在其所声明的方法、构造方法或代码块中有效，而成员变量在整个类内都可见和访问。</p>\n</li>\n<li>\n<p>生命周期：局部变量的生命周期仅限于其声明所在的方法、构造方法或代码块，而成员变量与其所属对象的生命周期保持一致。</p>\n</li>\n<li>\n<p>初始化：局部变量在声明时不会被自动初始化，需要在使用前手动赋值，而成员变量在声明时会被自动初始化。</p>\n</li>\n<li>\n<p>访问方式：局部变量一般通过直接引用或传递参数的方式进行访问和使用，成员变量通过对象引用或类名访问。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"13-方法的多态\"><a class=\"anchor\" href=\"#13-方法的多态\">#</a> 1.3 方法的多态</h3>\n<p><img data-src=\"IMG_20230908142432495_WiDyF21sJR.jpg\" alt=\"IMG_20230908142432495_WiDyF21sJR.jpg\" /></p>\n<p><img data-src=\"IMG_20230908143317651_Vjxc7ZiOGe.jpg\" alt=\"IMG_20230908143317651_Vjxc7ZiOGe.jpg\" /></p>\n<p>处理局部变量的局部问题，考虑作用域，使用 this 来指定调用（this 代当前对象方法自己的属性）</p>\n<p>在找不到需要的方法时，Java 会自己构造一个空方法以合语法。</p>\n<p><img data-src=\"IMG_20230908143424984_GZeQTxjOqg.jpg\" alt=\"IMG_20230908143424984_GZeQTxjOqg.jpg\" /></p>\n<h3 id=\"14-方法的重载\"><a class=\"anchor\" href=\"#14-方法的重载\">#</a> 1.4 方法的重载</h3>\n<h3 id=\"15-不同对象之间的关系\"><a class=\"anchor\" href=\"#15-不同对象之间的关系\">#</a> 1.5 不同对象之间的关系</h3>\n<p>组合关系：一个类作为另一个类的属性（松散的耦合关系）</p>\n<p>聚合方式：把你需要的类声明为属性（整体与部分）</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Phone</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> Sim sim;</span><br><span class=\"line\"><span class=\"keyword\">private</span> Battery battery;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">Phone</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">battery = <span class=\"keyword\">new</span> <span class=\"title class_\">Battery</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setSim</span><span class=\"params\">(Sim sim)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">this</span>.sim = sim;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">call</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">this</span>.battery=<span class=\"built_in\">this</span>.battery-<span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Sim</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String cardID;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">Sim</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Battery</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> powerLevel;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">Battery</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">Battery</span><span class=\"params\">(<span class=\"type\">int</span> powerLevel)</span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//测试类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Client</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span> <span class=\"params\">(String[]args)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"16-静态字static\"><a class=\"anchor\" href=\"#16-静态字static\">#</a> 1.6 静态字 static</h3>\n<p>可以在不产生实例化对象的情况下调用方法，多用于工具方法。</p>\n<p>静态方法中不允许不能访问成员变量。（成员变量需要实例化，但是静态变量没有实例化，成员变量的对象不一定实例化，所以为了减少错误，不允许访问）</p>\n<p>允许成员变量访问静态变量。成员变量只属于对象本身，不被其他对象调用。</p>\n<p>如果使用 static 定义变量，该变量成为类的变量，可以直接调用无需实例化。所有类都可以调用它。</p>\n<h3 id=\"17-传值\"><a class=\"anchor\" href=\"#17-传值\">#</a> 1.7 传值</h3>\n<p>临时变量的只传递值，不改变原变量；</p>\n<p>引用类型：传递地址。</p>\n<h3 id=\"18-类的说明符\"><a class=\"anchor\" href=\"#18-类的说明符\">#</a> 1.8 类的说明符</h3>\n<h4 id=\"181-final\"><a class=\"anchor\" href=\"#181-final\">#</a> 1.8.1 final</h4>\n<p>用于定义一个常量，例如 static final float PI = 3.14f；一般声明为静态。常量一般全大写。</p>\n<h4 id=\"182-abstract抽象类\"><a class=\"anchor\" href=\"#182-abstract抽象类\">#</a> 1.8.2 abstract 抽象类</h4>\n<p>用于定义抽象类，无法被实例化。只能给具体实现类继承。</p>\n<ul>\n<li>\n<p>抽象类的特点</p>\n<p>1. 抽象方法：</p>\n<p>抽象类中可以包含抽象方法，抽象方法没有具体的实现，只有方法名和参数列表，不包含方法体。子类必须实现抽象方法，否则子类也必须声明为抽象类。</p>\n<p>2. 实例化限制：</p>\n<p>抽象类不能被实例化，也就是不能通过 new 关键字来创建抽象类的对象。只能通过继承抽象类，并实现其抽象方法后，使用子类来实例化对象。</p>\n<p>3. 构造方法：</p>\n<p>抽象类是不能被实例化的，因此抽象类的构造方法不能用来创建对象，只能被其子类调用。抽象类的构造方法的作用是初始化抽象类的成员变量和调用父类的构造方法。抽象类的构造方法的定义方式和普通类的构造方法相同，但是需要注意以下两点：</p>\n<ul>\n<li>\n<p>抽象类的构造方法不能使用 abstract 修饰符，因为构造方法不是抽象方法。</p>\n</li>\n<li>\n<p>抽象类的子类必须实现其父类的构造方法，因为子类在实例化时需要先调用父类的构造方法完成初始化。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>注意事项：</p>\n<ol>\n<li>\n<p>抽象类可以包含非抽象方法和字段，子类可以继承和使用。</p>\n</li>\n<li>\n<p>一个类只能继承一个抽象类，但可以同时实现多个接口。</p>\n</li>\n<li>\n<p>子类实现抽象方法时，方法签名必须与父类中的抽象方法完全一致，包括返回类型、方法名和参数列表。</p>\n</li>\n<li>\n<p>抽象方法没有方法体，不能使用  final 、 static 、 private  修饰符。</p>\n</li>\n<li>\n<p>如果子类继承抽象类但不实现抽象方法，那么子类也必须声明为抽象类。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"183-public\"><a class=\"anchor\" href=\"#183-public\">#</a> 1.8.3 public</h4>\n<p>类的访问修饰符</p>\n<h4 id=\"184-native\"><a class=\"anchor\" href=\"#184-native\">#</a> 1.8.4 native</h4>\n<p>使用 C 语言绕开某些问题</p>\n<h3 id=\"19关键字\"><a class=\"anchor\" href=\"#19关键字\">#</a> 1.9 关键字</h3>\n<p>JAVA 中的关键字是一些被编程语言所保留的标识符，用来表示特定的功能或具有特殊用途的单词。</p>\n<p>JAVA 中的主要关键字：</p>\n<h4 id=\"基本关键字\"><a class=\"anchor\" href=\"#基本关键字\">#</a> 基本关键字</h4>\n<ul>\n<li>\n<p>abstract ：用于定义抽象类和抽象方法。</p>\n<p>boolean ：表示布尔类型。</p>\n<p>byte ：表示 8 位带符号整数类型。</p>\n<p>char ：表示 16 位 Unicode 字符类型。</p>\n<p>class ：用于定义类。</p>\n<p>double ：表示 64 位双精度浮点类型。</p>\n<p>enum ：用于定义枚举类型。</p>\n<p>extends ：用于类的继承。</p>\n<p>final ：表示不可改变的或最终的。</p>\n<p>float ：表示 32 位单精度浮点类型。</p>\n<p>implements ：用于类实现接口。</p>\n<p>int ：表示 32 位有符号整数类型。</p>\n<p>interface ：用于定义接口。</p>\n<p>long ：表示 64 位有符号整数类型。</p>\n<p>new ：用于创建新对象。</p>\n<p>null ：表示空引用。</p>\n<p>package ：用于定义包。</p>\n</li>\n<li>\n<p>private ：表示私有的。</p>\n<p>protected ：表示受保护的。</p>\n<p>public ：表示公共的。</p>\n<p>return ：用于从方法返回值。</p>\n<p>short ：表示 16 位有符号整数类型。</p>\n<p>static ：表示静态的。</p>\n<p>super ：用于引用父类。</p>\n<p>switch ：用于开关语句。</p>\n<p>this ：表示当前对象。</p>\n<p>void ：表示没有返回值的。</p>\n<p>while ：用于循环语句。</p>\n</li>\n</ul>\n<h4 id=\"保留关键字\"><a class=\"anchor\" href=\"#保留关键字\">#</a> 保留关键字</h4>\n<p>JAVA 还有一些被保留但尚未使用的关键字，如  goto 、 const 、 native 等。这些关键字是 JAVA 编程中的保留字，具有特殊的含义和用途。在编写代码时，应避免使用这些关键字作为标识符，以免引起编译错误。</p>\n<h4 id=\"关键字的使用\"><a class=\"anchor\" href=\"#关键字的使用\">#</a> 关键字的使用</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mbG93dXMuY24vMTc3NzMyYTUtODc2Zi00MGJmLWI1ZTUtMmMzNzFkMTM5NTEy\">关键字使用</span></p>\n<h3 id=\"110字面量\"><a class=\"anchor\" href=\"#110字面量\">#</a> 1.10 字面量</h3>\n<p>即数据在程序中的书写格式。主要有整数，小数，字符串，布尔，空类型和制表符（\\t，\\r，\\n）等。</p>\n<p><img data-src=\"Screenshot_2023-09-15-17-27-07-143_com.wolai.flutt.png\" alt=\"Screenshot_2023-09-15-17-27-07-143_com.wolai.flutt.png\" /></p>\n<p>Null 不能直接打印，必须加双引号；</p>\n<p>注意单引号只能引单个字符；</p>\n<p>制表符 t：将前面字符串补齐到 8 位。最少补 1，最多补 8 位</p>\n<h3 id=\"111运算符\"><a class=\"anchor\" href=\"#111运算符\">#</a> 1.11 运算符</h3>\n<ul>\n<li>\n<p>1. 算数运算符</p>\n<p>+、-、 *、/、%</p>\n<p>小数参与计算，结果可能不精确，整数计算只会得到整数。</p>\n<p>+ 可以用于字符串的拼接</p>\n</li>\n<li>\n<p>自增自减运算符</p>\n<p>++ 变量的值加 1</p>\n<p>位置决定变量的加 1 顺序。放在前面是先 + 1。</p>\n</li>\n<li>\n<p>赋值运算符</p>\n</li>\n<li>\n<p>关系运算符</p>\n</li>\n<li>\n<p>逻辑运算符</p>\n</li>\n<li>\n<p>三元运算符</p>\n</li>\n<li>\n<p>运算符优先级</p>\n</li>\n</ul>\n<h3 id=\"112语句块\"><a class=\"anchor\" href=\"#112语句块\">#</a> 1.12 语句块</h3>\n<p>类的定义只允许存在属性和方法，不允许存在语句。但是可以使用语句块（使用 {} 包括的语句）。语句块可以用 static 修饰。</p>\n<p>一个类的静态方法被执行的时候，该类会被加载。类实例化或者加载之后，static 语句块就会被执行。但是静态语句块只会在类加载实例化的时候被执行一次。普通语句块会在每次实例化都加载一次。</p>\n<p>可以在类的内部再次嵌套，即定义<strong>内部类</strong>。</p>\n<h3 id=\"113-操作符\"><a class=\"anchor\" href=\"#113-操作符\">#</a> 1.13 操作符</h3>\n<p>instanceof ：返回布尔值，用于判断一个实例是否是一个类的一个对象。例如</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Fish</span> <span class=\"variable\">fish1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Fish</span>();</span><br><span class=\"line\">System.out.println(fish1 <span class=\"keyword\">instanceof</span> Fish);</span><br><span class=\"line\"><span class=\"comment\">//返回值为Ture</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2idea使用\"><a class=\"anchor\" href=\"#2idea使用\">#</a> 2.IDEA 使用</h2>\n<h3 id=\"21结构分类\"><a class=\"anchor\" href=\"#21结构分类\">#</a> 2.1 结构分类</h3>\n<p><img data-src=\"Screenshot_2023-09-16-22-32-26-419_tv.danmaku.bili.png\" alt=\"Screenshot_2023-09-16-22-32-26-419_tv.danmaku.bili.png\" /></p>\n<h4 id=\"211项目\"><a class=\"anchor\" href=\"#211项目\">#</a> 2.1.1 项目</h4>\n<h4 id=\"212模块\"><a class=\"anchor\" href=\"#212模块\">#</a> 2.1.2 模块</h4>\n<h4 id=\"213包\"><a class=\"anchor\" href=\"#213包\">#</a> 2.1.3 包</h4>\n<p>为了便于管理<strong>组织</strong>大型软件系统中数目众多的类，<strong>解决类命名冲突</strong>的问题，引入包的概念。</p>\n<p>类文件必须处在同名的文件夹下面。使用 “-d .  Test.Java” 语句可以自动创建包文件夹。Java 自己提供了一组可以用的包。“import ” 导入类包。例如：“import Java.io.file”; 注意不要完全导入，用多少导入多少。</p>\n<h4 id=\"214类\"><a class=\"anchor\" href=\"#214类\">#</a> 2.1.4 类</h4>\n<h3 id=\"22拓展设置与操作\"><a class=\"anchor\" href=\"#22拓展设置与操作\">#</a> 2.2 拓展设置与操作</h3>\n<p>外观</p>\n<p>psvm 主函数 /sout 输出语句</p>\n<h2 id=\"3继承\"><a class=\"anchor\" href=\"#3继承\">#</a> 3. 继承</h2>\n<h3 id=\"31特点\"><a class=\"anchor\" href=\"#31特点\">#</a> 3.1 特点</h3>\n<p>使用 extends 关键字可以让子类继承父类的所有特性。</p>\n<p>子类可以添加自己的特性，可以重写覆盖继承来的方法。重写依赖于重载的逻辑规则。</p>\n<p>在存储时候，先分配父类，再给子类分配不同特性。继承自父类的直接使用父类的空间，子类自己重写的会单独分配空间。如果要在子类已经覆盖过的地方调用覆盖之前的父类，使用 super 调用原父类的属性或者方法。</p>\n<blockquote>\n<p>构造方法：在 JAVA 语言中，构造方法（Constructor）是一种特殊类型的方法，它用于创建和初始化对象。构造方法的名称与类名完全相同，且没有返回类型（包括 void）。构造方法在对象创建时自动调用，常用于初始化对象的成员变量。<br />\n具体用法和注意事项如下：1. 构造方法的重载：一个类可以有多个构造方法，它们的参数列表不同，可以根据不同的初始化需求进行选择。2. 默认构造方法：如果一个类没有定义任何构造方法，编译器会自动生成一个无参的默认构造方法。3. 显式定义构造方法：如果在类中定义了一个或多个构造方法，编译器就不会再自动生成默认构造方法。因此，如果需要无参构造方法，必须显式定义。4. 构造方法的重要性：构造方法在创建对象时执行，可以用于进行对象的初始化操作，例如为成员变量赋初值、申请资源等。5. 注意参数的合法性：构造方法中可以进行参数的验证，确保传入的参数符合要求，避免后续出现错误。6. 避免过多的逻辑：构造方法应该尽量简洁，不应该包含过多的逻辑，以保持代码的可读性和可维护性。7. 构造方法的继承：子类在实例化时，会先调用父类的构造方法来创建父类对象，然后再进行子类的初始化。8. 继承无法继承私有 private 方法。<br />\n构造方法在对象的创建和初始化过程中起着重要的作用，可以根据具体需求和设计原则灵活地使用和定义构造方法。</p>\n</blockquote>\n<hr />\n<h3 id=\"32-使用\"><a class=\"anchor\" href=\"#32-使用\">#</a> 3.2 使用</h3>\n<p>子类的构造方法被调用，将会自动产生隐含语句＂super（）；&quot; 去调用父类的构造方法。例如</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Fish</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Animals</span>&#123;</span><br><span class=\"line\">  Fish()&#123;<span class=\"built_in\">super</span>();&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//会调用一次父类的构造方法，然后调用自己的构造方法。</span></span><br></pre></td></tr></table></figure></p>\n<p>在声明时候，可以使用父类实例化一个子类。（即向下转型操作），如果非要转换（向上转型），可以使用强制转换，但是不一定能成功：</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Animal</span> <span class=\"variable\">a2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Fish</span>();</span><br><span class=\"line\"><span class=\"type\">Fish</span> <span class=\"variable\">a4</span> <span class=\"operator\">=</span> (Fish) <span class=\"keyword\">new</span> <span class=\"title class_\">Animal</span>();<span class=\"comment\">//（失败）</span></span><br><span class=\"line\"><span class=\"type\">Fish</span> <span class=\"variable\">a4</span> <span class=\"operator\">=</span> (Fish)a2;<span class=\"comment\">//(成功，因为a2确实是fish）</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"33-为什么需要类的转型\"><a class=\"anchor\" href=\"#33-为什么需要类的转型\">#</a> 3.3 为什么需要类的转型？</h3>\n<p>符合开闭原则（多增少改），一般在声明时候使用普通类，实例化使用具体类。有利于增加方法适用性，减少错误。在声明时，系统会把类处理为基类，即无法调用子类的特有方法，只能使用基类。运行时要看具体类的方法。</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Animals</span> <span class=\"variable\">a1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Fish</span>();</span><br><span class=\"line\">a1.swim();<span class=\"comment\">//出错，a1在这里视为Animal</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"第三章-接口与实现\"><a class=\"anchor\" href=\"#第三章-接口与实现\">#</a> 第三章 接口与实现</h1>\n<p>一种标准规范</p>\n<p>接口内部不允许有实现。但是使用 default 修饰之后，可以让该方法在后面实现的时候不强制要求实现，系统会给到一个 &quot;默认&quot; 的实现。</p>\n<p>优势：配定标准之后，可以无限复用。</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>;</span><br><span class=\"line\">  String <span class=\"title function_\">getAnimalName</span><span class=\"params\">()</span>;          <span class=\"comment\">//默认为public</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Animal</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">cry</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">  &#125;                               <span class=\"comment\">//默认为default，注意改成public</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> String <span class=\"title function_\">getAnimalName</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"第四章-内部类与异常类\"><a class=\"anchor\" href=\"#第四章-内部类与异常类\">#</a> 第四章 内部类与异常类</h1>\n<p>throwable 接口</p>\n<p>error</p>\n<p>exception</p>\n<p>使用 throw 语句再次抛出 exception。</p>\n<p>异常类的子类不能抛出更多种类的异常。</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    div（<span class=\"number\">5</span>，<span class=\"number\">0</span>）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span>（Exception e)&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;div by zero&quot;</span> );</span><br><span class=\"line\">    System.out.println(e.toString());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>finally{}</p>\n<h1 id=\"第五章-常用类\"><a class=\"anchor\" href=\"#第五章-常用类\">#</a> 第五章 常用类</h1>\n<h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n<h1 id=\"第六章-输入与输出流io\"><a class=\"anchor\" href=\"#第六章-输入与输出流io\">#</a> 第六章 输入与输出流（IO）</h1>\n<h2 id=\"1file类\"><a class=\"anchor\" href=\"#1file类\">#</a> 1.File 类</h2>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FileTest</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span>&#123;</span><br><span class=\"line\">      <span class=\"type\">File</span> <span class=\"variable\">f1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;1.txt&quot;</span>);</span><br><span class=\"line\">      <span class=\"type\">Fil2</span> <span class=\"variable\">f2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!f1.exists())</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">           f2.createNewFile();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Exception e)&#123;</span><br><span class=\"line\">        e.printStackTrace();  </span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(IOException e)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;路径不存在&quot;</span>)；  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2流式io\"><a class=\"anchor\" href=\"#2流式io\">#</a> 2. 流式 I/O</h2>\n<p>流是字节的源或目的。两种基本流有：输入流和输出流。可以从中读出一系列字节的对象称为输入流，向其写入一系列字节的对象称为输出流。</p>\n<p>另有字节流与字符流的区分。字符流是指使用可读的英文单词等等组成的内容，例如网页，源代码文件；而字节流是基本的流，不管可读性，存在大量其他控制代码等，例如 PPT，word 等。</p>\n<p>节点流：从特定的地方读写的流。</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Buffered</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStream</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"第七章-多线程\"><a class=\"anchor\" href=\"#第七章-多线程\">#</a> 第七章 多线程</h1>\n",
            "tags": [
                "Java"
            ]
        },
        {
            "id": "https://ilgetar.github.io/2025/08/28/HelloWeb/",
            "url": "https://ilgetar.github.io/2025/08/28/HelloWeb/",
            "title": "基于GitHub的个人网站搭建",
            "date_published": "2025-08-27T16:45:02.465Z",
            "content_html": "<p>偶尔更新，经常做梦</p>\n<h1 id=\"写在前面\"><a class=\"anchor\" href=\"#写在前面\">#</a> 写在前面</h1>\n<p>​\t取次花丛懒回顾，半缘修道半缘仙</p>\n<p>​\t不知怎的脑海里突然就冒出来这一句话，于是便把这句话写在最前面。古老的诗文即便是放在今日也依旧美的不行，哪怕是对本意背景都无所了解。缘真的是一个很奇妙的东西，曾经为缘一字苦痛悲愤，到释然放下，人生总是如此。我只是一个普通人，我很难成为一个伟大的人，但是我会一直前进。</p>\n<p>​\t很早之前就一直在想自己搭建一个属于自己的个人网站，别问时代有无淘汰，这真的很酷，不是吗？在这个急躁的时代，静下来心去做一件自己想实现的事情。有点可惜的是，我在大学的专业里根本接触不到相关的课程体系，于是只能自己自学 HTML 技术，然后又在 AC 站找了好些教程，问了 cusor、kimi 各种 AI 工具，翻阅了各种工具书。最后才建立起这个网址。意外的是，在不对具体的技术做深入理解的前提下，仅仅搭建好一个建议的网站这整个过程其实只需要不到半天时间。所以其实一直是我的拖延症在影响我自己，我在此必须做深刻的反思和警醒。</p>\n<p>​\t有想法就马上出发吧！<s><em>别让等待成为遗憾</em></s></p>\n<p>​\t本站的搭建使用了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span> 框架，主题使用了 Ruri Shimotsuki 老师的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\"> shoka</span> 主题，非常感谢老师的设计，配色和小细节观感很舒服，真的很漂亮又实用。在此主题的基础之上我进一步添加了一些基于个人需求的调整，添加了一些新的功能和实现模块，例如网站访客数量。<em><span class=\"spoiler\" title=\"你知道得太多了\">貌似访客为 0 也没有什么必要显示吧</span></em> 在这个网站上我将会记录属于我自己的各种成就、想法、心得、观后感、摄影作品、游戏攻略等各类信息信息，或许你看了之后能有一些收获，也欢迎你和我交流讨论。</p>\n<p>​\t在这篇文章中，我会整理出一份在搭建该网站的过程中所有的心得和笔记。</p>\n<p>​\t<strong>欢迎来到我的数字花园。</strong></p>\n<h1 id=\"搭建须知\"><a class=\"anchor\" href=\"#搭建须知\">#</a> 搭建须知</h1>\n<h2 id=\"如何调整主题参数\"><a class=\"anchor\" href=\"#如何调整主题参数\">#</a> 如何调整主题参数</h2>\n<p>在 root/themes/shoka 下是主题的配置文件，在 language 文件下是语言包，在这里对网页主题的文字和各国语言文字进行配置和调整，以及配置必要的图标。在 config/yml 文件中可以对主题的主要参数和界面进行配置。</p>\n<p>在 /root/ 下的 config.yml 中配置了网站本身的一些必要信息，包括网页标题，部署仓库等基础信息，在这里可以进行修改和调整。</p>\n<p>在 /root/ 下的 source 文件中可以添加网站需要的数据信息，包括图片、文章等数据，在此处添加后再在别的代码中进行引用即可。</p>\n<h2 id=\"如何上传相关图片与文章\"><a class=\"anchor\" href=\"#如何上传相关图片与文章\">#</a> 如何上传相关图片与文章</h2>\n<p>首先需要你在对应的界面配置好必要的程序代码，然后再进行推文的调用。</p>\n<p>图片的调用可以使用本地的方法调用，例如存放在主题文件下：themes /shoka/source/images<br />\n 然后在其他的地方可以使用相对路径或者绝对路径进行调用，一般本地用来存放一些固定的图片，例如头像等。</p>\n<p>在文章中插入我们需要的图片则可以考虑使用图床进行实现。使用 GitHub 仓库用来存放图片文件，然后使用 picgo 来进行图片文件的管理和上传，然后获取链接就可以直接插入我们的文章了。（细则以后再补充）</p>\n<p>tips：<br />\nYAML 只能用空格，不要用 Tab。<br />\n同一层级的缩进必须一致（推荐 2 个空格）。<br />\n可以在 bash 文档对应的位置进行 post 文档的创建和目录创建：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D：//切换D盘</span><br><span class=\"line\"><span class=\"built_in\">cd</span>：root/source/_post/</span><br><span class=\"line\">hexo new post  //创建文章</span><br><span class=\"line\"><span class=\"built_in\">cd</span>: <span class=\"built_in\">source</span></span><br><span class=\"line\">hexo new page friends //创建页面</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用卜算子以显示访客数据\"><a class=\"anchor\" href=\"#使用卜算子以显示访客数据\">#</a> 使用卜算子以显示访客数据</h2>\n<p>Busuanzi (不蒜子) 是一款轻量、极简的网站访问量统计工具，通过嵌入 JavaScript 代码集成即可实现全站或单页面的 PV (浏览量) 和 UV (访客数) 等基础数据统计功能，适用于个人博客、企业官网等网站。<br />\n使用以下代码以简单实现该功能：</p>\n<p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;//api.busuanzi.cc/static/3.6.9/busuanzi.min.js&quot;</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br />\n 我们的实现方法：</p>\n<ol>\n<li>先在 shoka 主题配置下的_config.yml 文件下新增页脚部分显示。</li>\n</ol>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">footer:</span></span><br><span class=\"line\">  <span class=\"comment\"># ... 现有配置 ...</span></span><br><span class=\"line\">  <span class=\"attr\">since:</span> <span class=\"number\">2025</span></span><br><span class=\"line\">  <span class=\"attr\">icon:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">sakura</span> <span class=\"string\">rotate</span></span><br><span class=\"line\">    <span class=\"attr\">color:</span> <span class=\"string\">&quot;#ffc0cb&quot;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># 添加不蒜子统计配置</span></span><br><span class=\"line\">  <span class=\"attr\">busuanzi:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">order:</span> <span class=\"number\">25</span>  <span class=\"comment\"># 显示顺序</span></span><br><span class=\"line\">    <span class=\"attr\">show_site_pv:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># 显示网站总访问量</span></span><br><span class=\"line\">    <span class=\"attr\">show_site_uv:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># 显示网站总访客数</span></span><br><span class=\"line\">    <span class=\"attr\">show_page_pv:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># 显示页面访问量</span></span><br><span class=\"line\">    <span class=\"attr\">show_page_uv:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># 显示页面访客数</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">running_time:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">order:</span> <span class=\"number\">30</span></span><br><span class=\"line\">    <span class=\"attr\">birthday:</span> <span class=\"string\">&#x27;2025/08/07 18:21:14&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">powered:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure><br />\n2. 修改 themes/shoka/layout/_partials/footer.njk 文件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;# 按 order 升序排列的 footer 模块 #&#125;</span><br><span class=\"line\">&#123;% set footer_items = [</span><br><span class=\"line\">    &#123;name: &#x27;copyright&#x27;, order: 10&#125;,</span><br><span class=\"line\">    &#123;name: &#x27;count&#x27;,     order: 20&#125;,</span><br><span class=\"line\">    &#123;name: &#x27;busuanzi&#x27;,  order: 25&#125;,  &#123;# 添加不蒜子统计 #&#125;</span><br><span class=\"line\">    &#123;name: &#x27;running_time&#x27;, order: theme.footer.running_time.order|default(30)&#125;,</span><br><span class=\"line\">    &#123;name: &#x27;powered&#x27;,   order: 40&#125;</span><br><span class=\"line\">] | sort(attribute=&#x27;order&#x27;) %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;status&quot;&gt;</span><br><span class=\"line\">  &#123;% for item in footer_items %&#125;</span><br><span class=\"line\">    &#123;% if item.name == &#x27;copyright&#x27; %&#125;</span><br><span class=\"line\">      &lt;div class=&quot;copyright&quot;&gt;</span><br><span class=\"line\">        &#123;% set copyright_year = date(null, &#x27;YYYY&#x27;) %&#125;</span><br><span class=\"line\">        &amp;copy;</span><br><span class=\"line\">        &#123;% if theme.footer.since and theme.footer.since != copyright_year %&#125;</span><br><span class=\"line\">          &#123;&#123; theme.footer.since &#125;&#125; – </span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">        &lt;span itemprop=&quot;copyrightYear&quot;&gt;&#123;&#123; copyright_year &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">        &lt;span class=&quot;with-love&quot;&gt;</span><br><span class=\"line\">          &lt;i class=&quot;ic i-&#123;&#123; theme.footer.icon.name &#125;&#125;&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;span class=&quot;author&quot; itemprop=&quot;copyrightHolder&quot;&gt;&#123;&#123; author &#125;&#125; @ &#123;&#123; alternate if alternate else title&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% elif item.name == &#x27;count&#x27; and theme.footer.count %&#125;</span><br><span class=\"line\">      &lt;div class=&quot;count&quot;&gt;</span><br><span class=\"line\">        &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">          &lt;i class=&quot;ic i-chart-area&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;span title=&quot;&#123;&#123; __(&#x27;symbols_count_time.count_total&#x27;) &#125;&#125;&quot;&gt;&#123;&#123; symbolsCountTotal(site) &#125;&#125; &#123;&#123;__(&#x27;symbols_count_time.word&#x27;)&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">        &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">          &lt;i class=&quot;ic i-coffee&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;span title=&quot;&#123;&#123; __(&#x27;symbols_count_time.time_total&#x27;) &#125;&#125;&quot;&gt;&#123;&#123; symbolsTimeTotal(site, config.symbols_count_time.awl, config.symbols_count_time.wpm, __(&#x27;symbols_count_time.time_minutes&#x27;)) &#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% elif item.name == &#x27;busuanzi&#x27; and theme.footer.busuanzi.enable %&#125;</span><br><span class=\"line\">      &lt;div class=&quot;busuanzi-stats&quot;&gt;</span><br><span class=\"line\">        &#123;% if theme.footer.busuanzi.show_site_pv %&#125;</span><br><span class=\"line\">          &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">            &lt;i class=&quot;ic i-eye&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">          &lt;span title=&quot;网站总访问量&quot;&gt;</span><br><span class=\"line\">            总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;0&lt;/span&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#123;% if theme.footer.busuanzi.show_site_uv %&#125;</span><br><span class=\"line\">          &#123;% if theme.footer.busuanzi.show_site_pv %&#125;</span><br><span class=\"line\">            &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">          &#123;% endif %&#125;</span><br><span class=\"line\">          &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">            &lt;i class=&quot;ic i-user&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">          &lt;span title=&quot;网站总访客数&quot;&gt;</span><br><span class=\"line\">            总访客数 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;0&lt;/span&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#123;% if theme.footer.busuanzi.show_page_pv %&#125;</span><br><span class=\"line\">          &#123;% if theme.footer.busuanzi.show_site_pv or theme.footer.busuanzi.show_site_uv %&#125;</span><br><span class=\"line\">            &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">          &#123;% endif %&#125;</span><br><span class=\"line\">          &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">            &lt;i class=&quot;ic i-chart-line&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">          &lt;span title=&quot;本页访问量&quot;&gt;</span><br><span class=\"line\">            本页访问 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;0&lt;/span&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#123;% if theme.footer.busuanzi.show_page_uv %&#125;</span><br><span class=\"line\">          &#123;% if theme.footer.busuanzi.show_page_pv or theme.footer.busuanzi.show_site_pv or theme.footer.busuanzi.show_site_uv %&#125;</span><br><span class=\"line\">            &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class=\"line\">          &#123;% endif %&#125;</span><br><span class=\"line\">          &lt;span class=&quot;post-meta-item-icon&quot;&gt;</span><br><span class=\"line\">            &lt;i class=&quot;ic i-users&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">          &lt;span title=&quot;本页访客数&quot;&gt;</span><br><span class=\"line\">            本页访客 &lt;span id=&quot;busuanzi_value_page_uv&quot;&gt;0&lt;/span&gt;</span><br><span class=\"line\">          &lt;/span&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% elif item.name == &#x27;running_time&#x27; and theme.footer.running_time.enable %&#125;</span><br><span class=\"line\">      &lt;div class=&quot;running-time&quot;&gt;</span><br><span class=\"line\">        &lt;span class=&quot;running-time-icon&quot;&gt;</span><br><span class=\"line\">          &lt;i class=&quot;ic i-clock&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;span class=&quot;running-time-text&quot; id=&quot;site-running-time&quot;&gt;</span><br><span class=\"line\">          &lt;!-- 占位，JS 会填充 --&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% elif item.name == &#x27;powered&#x27; and theme.footer.powered %&#125;</span><br><span class=\"line\">      &lt;div class=&quot;powered-by&quot;&gt;</span><br><span class=\"line\">        &#123;&#123; __(&#x27;footer.powered&#x27;, &#x27;&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; &amp; Theme.&lt;a href=&quot;https://github.com/amehime/hexo-theme-shoka&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Shoka&lt;/a&gt;&#x27;) &#125;&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  &#123;% endfor %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;# 添加不蒜子统计脚本 #&#125;</span><br><span class=\"line\">&#123;% if theme.footer.busuanzi.enable %&#125;</span><br><span class=\"line\">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;# running_time 的脚本，仅当启用时才注入 #&#125;</span><br><span class=\"line\">&#123;% if theme.footer.running_time.enable %&#125;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">(function()&#123;</span><br><span class=\"line\">  const start = new Date(&#x27;&#123;&#123; theme.footer.running_time.birthday &#125;&#125;&#x27;);</span><br><span class=\"line\">  const SECOND = 1000, MINUTE = 60 * SECOND, HOUR = 60 * MINUTE, DAY = 24 * HOUR;</span><br><span class=\"line\">  function pad(n)&#123; return n.toString().padStart(2,&#x27;0&#x27;); &#125;</span><br><span class=\"line\">  function tick()&#123;</span><br><span class=\"line\">    let delta = Date.now() - start;</span><br><span class=\"line\">    const days  = Math.floor(delta / DAY); delta %= DAY;</span><br><span class=\"line\">    const hrs   = Math.floor(delta / HOUR); delta %= HOUR;</span><br><span class=\"line\">    const mins  = Math.floor(delta / MINUTE); delta %= MINUTE;</span><br><span class=\"line\">    const secs  = Math.floor(delta / SECOND);</span><br><span class=\"line\"></span><br><span class=\"line\">    const now = new Date();</span><br><span class=\"line\">    let y = now.getFullYear() - start.getFullYear();</span><br><span class=\"line\">    let m = now.getMonth() - start.getMonth();</span><br><span class=\"line\">    let d = now.getDate() - start.getDate();</span><br><span class=\"line\">    if (d &lt; 0)&#123; m--; d += new Date(now.getFullYear(), now.getMonth(), 0).getDate(); &#125;</span><br><span class=\"line\">    if (m &lt; 0)&#123; y--; m += 12; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    document.getElementById(&#x27;site-running-time&#x27;).innerHTML =</span><br><span class=\"line\">      `本站居然已运行了 &lt;span class=&quot;running-time-number&quot;&gt;$&#123;y&#125;&lt;/span&gt; 年 &lt;span class=&quot;running-time-number&quot;&gt;$&#123;m&#125;&lt;/span&gt; 月 &lt;span class=&quot;running-time-number&quot;&gt;$&#123;d&#125;&lt;/span&gt; 日 &lt;span class=&quot;running-time-number&quot;&gt;$&#123;hrs&#125;&lt;/span&gt;小时&lt;span class=&quot;running-time-number&quot;&gt;$&#123;mins&#125;&lt;/span&gt;分钟&lt;span class=&quot;running-time-number&quot;&gt;$&#123;secs&#125;&lt;/span&gt;秒`;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  tick();</span><br><span class=\"line\">  setInterval(tick, 1000);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><br />\n 在这里需要注意的是，其中注入的 &quot;<a href=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</a>&quot; 必须要是可以链接的位置。主要还是因为卜算子属于国内站点<s>而 GitHub 站点属于国外</s>，如果无法链接就需要采用镜像。当然本地也可以部署。更多可以看<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnVzdWFuemkuY2Mv\">官网信息</span>。在本地测试的时候有时候数据会很巨大，那是正常的，部署后联网调试就好，本地测试显示的数字据说是所有人在本地测试的次数。</p>\n<h2 id=\"如何将主页菜单挂载到页面\"><a class=\"anchor\" href=\"#如何将主页菜单挂载到页面\">#</a> 如何将主页菜单挂载到页面</h2>\n<p>在 bash 对应目录下输入 hexo new page XXX, 然后可以在主题的 config 下创建对应的菜单挂载，然后就可以实现对应页面的跳转。</p>\n<p>然后在对应的页面文件夹内部就会自动生成一个 index.html 文件，这就是我们必要的页面文件，可以直接在这里编写你 1 的页面内容。</p>\n<p>在这里有一个 permalink 的概念，但是我没搞明白。</p>\n<p>为什么「首页」没有挂页面却有内容？ <strong>home</strong> 对应的 URL 是  <code>/</code> ，它指向 <strong>Hexo 自动生成的首页模板</strong>（index.html）。<br />\n这个模板由主题  <code>layout/index.njk</code>  渲染，会把最近的文章列表、置顶文章、分页等一次性展示出来，<strong>不需要你手动写任何 <span class=\"exturl\" data-url=\"aHR0cDovL2luZGV4Lm1k\">index.md</span></strong>。因此「/」本身并非一个「page」，而是一条虚拟路由，主题默认就渲染内容。</p>\n<h2 id=\"使用categoriy分类标签以实现推文分类功能\"><a class=\"anchor\" href=\"#使用categoriy分类标签以实现推文分类功能\">#</a> 使用 categoriy 分类标签以实现推文分类功能</h2>\n<p>使用分类（Categories）和页面生成器</p>\n<p>这是最推荐的方法，通过创建带有特定分类的文章，然后使用页面生成器来显示特定分类的文章。</p>\n<p>步骤 1：创建文章</p>\n<p>首先，在_posts 目录下创建一篇文章，并给它添加 essay 分类：</p>\n<hr />\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 我的文章标题</span><br><span class=\"line\">date: 2025-08-16 12:00:00</span><br><span class=\"line\">categories: </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">  -</span> essay</span><br><span class=\"line\"><span class=\"code\">    tags: </span></span><br><span class=\"line\"><span class=\"code\">  - 随笔</span></span><br><span class=\"line\"><span class=\"code\">  - 思考</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">这里是文章内容...</span><br></pre></td></tr></table></figure></p>\n<p>步骤 2：修改 essay 页面</p>\n<p>然后，修改你的 source/essay/index.md 文件，使其能够显示该分类下的文章：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: essay</span><br><span class=\"line\">date: 2025-08-16 11:26:13</span><br><span class=\"line\">layout: category</span><br><span class=\"line\">category: essay</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p>步骤 3：安装页面生成器插件</p>\n<p>你需要安装 hexo-generator-category 插件来支持分类页面：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-category --save</span><br></pre></td></tr></table></figure></p>\n<p>同样的也可以使用 tags 来对文章进行整理分类，原理是一样的：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-tag --save</span><br></pre></td></tr></table></figure></p>\n<p>可能遇到的问题：</p>\n<p>模板期望 page.posts 存在，但当你使用 layout: category 时，Hexo 不会自动提供这个数据。</p>\n<p>解决方案是修改你的 essay 页面，使用一个更简单的布局。让我修改 essay 页面：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">title: essay</span><br><span class=\"line\">date: 2025-08-16 11:26:13</span><br><span class=\"line\">layout: page</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"># Essay 随笔</span><br><span class=\"line\"></span><br><span class=\"line\">这里是我的一些随笔文章：</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% for post in site.posts %&#125;</span><br><span class=\"line\">  &#123;% if post.categories and post.categories.length &gt; 0 %&#125;</span><br><span class=\"line\">    &#123;% for category in post.categories %&#125;</span><br><span class=\"line\">      &#123;% if category.name == &#x27;essay&#x27; %&#125;</span><br><span class=\"line\">        &lt;article class=&quot;post-item&quot;&gt;</span><br><span class=\"line\">          &lt;h3&gt;&lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;&lt;/h3&gt;</span><br><span class=\"line\">          &lt;div class=&quot;post-meta&quot;&gt;</span><br><span class=\"line\">            &lt;time&gt;&#123;&#123; date(post.date, &#x27;YYYY-MM-DD&#x27;) &#125;&#125;&lt;/time&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">          &#123;% if post.excerpt %&#125;</span><br><span class=\"line\">            &lt;div class=&quot;post-excerpt&quot;&gt;&#123;&#123; post.excerpt &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">          &#123;% endif %&#125;</span><br><span class=\"line\">        &lt;/article&gt;</span><br><span class=\"line\">      &#123;% endif %&#125;</span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\">  &#123;% endif %&#125;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>现在你的 essay 页面应该可以正常工作了！这个解决方案：</p>\n<ol>\n<li>\n<p>使用 layout: page：这是 Hexo 的标准页面布局，不会出现模板错误</p>\n</li>\n<li>\n<p>手动筛选文章：使用 Liquid 模板语法来筛选出所有带有 essay 分类的文章</p>\n</li>\n<li>\n<p>显示文章列表：在 essay 页面显示符合条件的文章标题、日期和摘要</p>\n</li>\n</ol>\n<p>现在你可以：</p>\n<ul>\n<li>\n<p>在_posts 目录下创建带有 categories: - essay 的文章</p>\n</li>\n<li>\n<p>这些文章会在首页显示（因为它们在_posts 目录下）</p>\n</li>\n<li>\n<p>这些文章也会在 essay 页面显示（因为页面会筛选出该分类的文章）</p>\n</li>\n<li>\n<p>其他页面不会显示这些文章（除非你给文章添加其他分类）</p>\n</li>\n</ul>\n<p>这部分也就是说明，如果使用 category 来分类文章，可能需要注意以下 layout: page 的问题.</p>\n<h1 id=\"使用说明\"><a class=\"anchor\" href=\"#使用说明\">#</a> 使用说明</h1>\n<h2 id=\"创建一篇文章\"><a class=\"anchor\" href=\"#创建一篇文章\">#</a> 创建一篇文章</h2>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>更多信息: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h2 id=\"测试运行\"><a class=\"anchor\" href=\"#测试运行\">#</a> 测试运行</h2>\n<p>本地测试运行：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==\">http://localhost:4000/</span></p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean //清除缓存</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<p>更新静态目录</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<p>远程部署到服务器</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n<h2 id=\"文章编写手册\"><a class=\"anchor\" href=\"#文章编写手册\">#</a> 文章编写手册</h2>\n<h3 id=\"文章头部配置\"><a class=\"anchor\" href=\"#文章头部配置\">#</a> 文章头部配置</h3>\n<p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">文章标题</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2025-08-09 19:42:08</span> <span class=\"comment\">#此处为文章的创建日期</span></span><br><span class=\"line\"><span class=\"attr\">update:</span> <span class=\"number\">2025-08-10</span> <span class=\"comment\">#此处为文章的更新时间</span></span><br><span class=\"line\"><span class=\"attr\">tags:</span> <span class=\"comment\">#标签页</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">标签1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">标签2</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"comment\">#分类页面</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">分类1</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">分类2</span></span><br><span class=\"line\"><span class=\"attr\">sticky:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 置顶文章</span></span><br><span class=\"line\"><span class=\"attr\">cover:</span> <span class=\"string\">images\\covers\\cover.jpg</span>  <span class=\"comment\"># 封面图片</span></span><br><span class=\"line\"><span class=\"attr\">archive:</span> <span class=\"literal\">true</span>  <span class=\"comment\"># 是否归档</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"标题文本格式\"><a class=\"anchor\" href=\"#标题文本格式\">#</a> 标题文本格式</h3>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级标题</span></span><br><span class=\"line\"><span class=\"section\">## 二级标题</span></span><br><span class=\"line\"><span class=\"section\">### 三级标题</span></span><br><span class=\"line\"><span class=\"section\">#### 四级标题</span></span><br><span class=\"line\"><span class=\"section\">##### 五级标题</span></span><br><span class=\"line\"><span class=\"section\">###### 六级标题</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体文本*</span> 或 <span class=\"emphasis\">_斜体文本_</span></span><br><span class=\"line\"><span class=\"strong\">**粗体文本**</span> 或 <span class=\"strong\">__粗体文本__</span></span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体文本*</span>**</span></span><br><span class=\"line\">~~删除线文本~~</span><br><span class=\"line\"><span class=\"code\">`行内代码`</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">链接文本</span>](<span class=\"link\">https://example.com</span>)</span><br><span class=\"line\">[<span class=\"string\">链接文本</span>](<span class=\"link\">https://example.com &quot;标题提示&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"string\">链接文本</span>][<span class=\"symbol\">引用名</span>]</span><br><span class=\"line\">[<span class=\"symbol\">引用名</span>]: <span class=\"link\">https://example.com &quot;标题提示&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">![<span class=\"string\">alt文本</span>](<span class=\"link\">图片URL</span>)</span><br><span class=\"line\">![<span class=\"string\">alt文本</span>](<span class=\"link\">图片URL &quot;标题提示&quot;</span>)</span><br><span class=\"line\">![<span class=\"string\">alt文本</span>][<span class=\"symbol\">图片引用</span>]</span><br><span class=\"line\">[<span class=\"symbol\">图片引用</span>]: <span class=\"link\">图片URL &quot;标题提示&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> 项目1</span><br><span class=\"line\"><span class=\"bullet\">-</span> 项目2</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目2.1</span><br><span class=\"line\"><span class=\"bullet\">  -</span> 子项目2.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">  1.</span> 第一项</span><br><span class=\"line\"><span class=\"bullet\">  2.</span> 第二项</span><br><span class=\"line\"><span class=\"bullet\">   1.</span> 子项2.1</span><br><span class=\"line\"><span class=\"bullet\">   2.</span> 子项2.2</span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用 <span class=\"code\">`code`</span> 标记行内代码</span><br><span class=\"line\"><span class=\"code\">```javascript</span></span><br><span class=\"line\"><span class=\"code\">var s = &quot;JavaScript语法高亮&quot;;</span></span><br><span class=\"line\"><span class=\"code\">alert(s);</span></span><br></pre></td></tr></table></figure><br />\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">``` markdown</span><br><span class=\"line\">   &gt; 这是一个引用块</span><br><span class=\"line\">   &gt; 可以包含多行</span><br><span class=\"line\">   &gt;&gt; 嵌套引用</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"分割线-code21-脚注内容-code22-\"><a class=\"anchor\" href=\"#分割线-code21-脚注内容-code22-\">#</a> 分割线<br />\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">或</span><br><span class=\"line\"><span class=\"strong\">***</span></span><br><span class=\"line\"><span class=\"strong\">或</span></span><br><span class=\"line\"><span class=\"strong\">__<span class=\"emphasis\">_</span></span></span><br></pre></td></tr></table></figure><br />\n 脚注内容<br />\n <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\">$E = mc^2$</span><br><span class=\"line\">这里是一个脚注[^1]</span><br><span class=\"line\">[<span class=\"symbol\">^1</span>]: <span class=\"link\">脚注内容</span></span><br></pre></td></tr></table></figure></h2>\n<h3 id=\"特殊显示功能\"><a class=\"anchor\" href=\"#特殊显示功能\">#</a> 特殊显示功能</h3>\n<p>例如<s>划掉线</s></p>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">黑幕悬停显示</span></p>\n<h1 id=\"网站迭代记录\"><a class=\"anchor\" href=\"#网站迭代记录\">#</a> 网站迭代记录</h1>\n<ol>\n<li>2025.8.7，查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUVnNDExNTd0TA==\">视频教程</span>，使用 GitHub 快速搭建仓库并且使用 shoka 主题，使用 hexo 构建整个网站的推送框架。</li>\n<li>2025.8.12，调整了整个页面的菜单和部分设计，图标调整失败，待后续优化。</li>\n<li>2025.8.14，添加了 bgm 功能和页脚计时器，暂时没有对这部分 css 做调整。</li>\n<li>2025.8.15，新增了浏览数和访客数页脚显示，建立了自有的 picgo 图床，注册了 Typora 工具，可以使用新工具创建 markdown 文档。<span class=\"spoiler\" title=\"你知道得太多了\">89 的工具其实还是好贵</span>但是暂时没有解决首页头图无法显示的问题，文章 cover 可以正常使用图床绝对链接来定义加载，首页的加载逻辑在 layout/pratial 下，图片在主题的 image.yml 文件下，暂时没有解决该问题。</li>\n<li>2025.8.16，创建了主页菜单每个对应的 page 页面，实现了对应页面的跳转。创建了部分推文，编写了部分内容。</li>\n<li>2025.8.27，添加了一些文档内容，确定了文档编写的模式。新增文档应该使用 hexo 创建文件</li>\n</ol>\n",
            "tags": [
                "web",
                "guide"
            ]
        },
        {
            "id": "https://ilgetar.github.io/2025/08/09/Blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://ilgetar.github.io/2025/08/09/Blender%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "Blender学习笔记",
            "date_published": "2025-08-09T11:42:08.000Z",
            "content_html": "<h1 id=\"这里是测试文字\"><a class=\"anchor\" href=\"#这里是测试文字\">#</a> 这里是测试文字</h1>\n<h2 id=\"等待补充完善\"><a class=\"anchor\" href=\"#等待补充完善\">#</a> 等待补充完善</h2>\n",
            "tags": []
        }
    ]
}